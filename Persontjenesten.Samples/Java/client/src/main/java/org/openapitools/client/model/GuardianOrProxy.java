/*
 * Persontjenesten API - ET
 * The Person API provides information on norwegian citizens for the norwegian public health sector, and is maintained by [Norsk helsenett](https://www.nhn.no/).  An API changelog is available [here](../static/changelog/index.html).  For more documentation and a complete integration guide, see the [NHN developer portal](https://utviklerportal.nhn.no/informasjonstjenester/persontjenesten/). 
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GuardianOrProxyGuardianInformation;
import org.openapitools.client.model.GuardianOrProxyName;
import org.openapitools.client.model.GuardianOrProxyNameBirthDate;
import org.openapitools.client.model.GuardianServiceArea;
import org.openapitools.client.model.GuardianshipScope;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;br&gt;FREG: VergeRepresentantEllerFullmektig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-30T07:50:48.244395087Z[Etc/UTC]", comments = "Generator version: 7.7.0-SNAPSHOT")
public class GuardianOrProxy {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private GuardianOrProxyName name;

  public static final String SERIALIZED_NAME_IDENTIFICATION_NUMBER = "identificationNumber";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION_NUMBER)
  private String identificationNumber;

  public static final String SERIALIZED_NAME_GUARDIANSHIP_SCOPE = "guardianshipScope";
  @SerializedName(SERIALIZED_NAME_GUARDIANSHIP_SCOPE)
  private GuardianshipScope guardianshipScope;

  public static final String SERIALIZED_NAME_IS_GUARDIANSHIP_IN_PERSONAL_SCOPE = "isGuardianshipInPersonalScope";
  @SerializedName(SERIALIZED_NAME_IS_GUARDIANSHIP_IN_PERSONAL_SCOPE)
  private Boolean isGuardianshipInPersonalScope;

  public static final String SERIALIZED_NAME_NAME_BIRTH_DATE = "nameBirthDate";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_NAME_BIRTH_DATE)
  private GuardianOrProxyNameBirthDate nameBirthDate;

  public static final String SERIALIZED_NAME_GUARDIAN_INFORMATION = "guardianInformation";
  @SerializedName(SERIALIZED_NAME_GUARDIAN_INFORMATION)
  private GuardianOrProxyGuardianInformation guardianInformation;

  public static final String SERIALIZED_NAME_GUARDIAN_SERVICE_AREA = "guardianServiceArea";
  @SerializedName(SERIALIZED_NAME_GUARDIAN_SERVICE_AREA)
  private List<GuardianServiceArea> guardianServiceArea;

  public GuardianOrProxy() {
  }

  public GuardianOrProxy name(GuardianOrProxyName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public GuardianOrProxyName getName() {
    return name;
  }

  public void setName(GuardianOrProxyName name) {
    this.name = name;
  }


  public GuardianOrProxy identificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
    return this;
  }

   /**
   * &lt;br&gt;FREG: FoedselsEllerDNummer
   * @return identificationNumber
  **/
  @javax.annotation.Nullable
  public String getIdentificationNumber() {
    return identificationNumber;
  }

  public void setIdentificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
  }


  public GuardianOrProxy guardianshipScope(GuardianshipScope guardianshipScope) {
    this.guardianshipScope = guardianshipScope;
    return this;
  }

   /**
   * &lt;br&gt;FREG: Vergemaalsomfang
   * @return guardianshipScope
  **/
  @javax.annotation.Nullable
  public GuardianshipScope getGuardianshipScope() {
    return guardianshipScope;
  }

  public void setGuardianshipScope(GuardianshipScope guardianshipScope) {
    this.guardianshipScope = guardianshipScope;
  }


  public GuardianOrProxy isGuardianshipInPersonalScope(Boolean isGuardianshipInPersonalScope) {
    this.isGuardianshipInPersonalScope = isGuardianshipInPersonalScope;
    return this;
  }

   /**
   * &lt;br&gt;FREG: OmfangetErInnenPersonligOmraade
   * @return isGuardianshipInPersonalScope
  **/
  @javax.annotation.Nullable
  public Boolean getIsGuardianshipInPersonalScope() {
    return isGuardianshipInPersonalScope;
  }

  public void setIsGuardianshipInPersonalScope(Boolean isGuardianshipInPersonalScope) {
    this.isGuardianshipInPersonalScope = isGuardianshipInPersonalScope;
  }


  @Deprecated
  public GuardianOrProxy nameBirthDate(GuardianOrProxyNameBirthDate nameBirthDate) {
    this.nameBirthDate = nameBirthDate;
    return this;
  }

   /**
   * Get nameBirthDate
   * @return nameBirthDate
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  public GuardianOrProxyNameBirthDate getNameBirthDate() {
    return nameBirthDate;
  }

  @Deprecated
  public void setNameBirthDate(GuardianOrProxyNameBirthDate nameBirthDate) {
    this.nameBirthDate = nameBirthDate;
  }


  public GuardianOrProxy guardianInformation(GuardianOrProxyGuardianInformation guardianInformation) {
    this.guardianInformation = guardianInformation;
    return this;
  }

   /**
   * Get guardianInformation
   * @return guardianInformation
  **/
  @javax.annotation.Nullable
  public GuardianOrProxyGuardianInformation getGuardianInformation() {
    return guardianInformation;
  }

  public void setGuardianInformation(GuardianOrProxyGuardianInformation guardianInformation) {
    this.guardianInformation = guardianInformation;
  }


  public GuardianOrProxy guardianServiceArea(List<GuardianServiceArea> guardianServiceArea) {
    this.guardianServiceArea = guardianServiceArea;
    return this;
  }

  public GuardianOrProxy addGuardianServiceAreaItem(GuardianServiceArea guardianServiceAreaItem) {
    if (this.guardianServiceArea == null) {
      this.guardianServiceArea = new ArrayList<>();
    }
    this.guardianServiceArea.add(guardianServiceAreaItem);
    return this;
  }

   /**
   * &lt;br&gt;FREG: VergeTjenesteomraade
   * @return guardianServiceArea
  **/
  @javax.annotation.Nullable
  public List<GuardianServiceArea> getGuardianServiceArea() {
    return guardianServiceArea;
  }

  public void setGuardianServiceArea(List<GuardianServiceArea> guardianServiceArea) {
    this.guardianServiceArea = guardianServiceArea;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GuardianOrProxy guardianOrProxy = (GuardianOrProxy) o;
    return Objects.equals(this.name, guardianOrProxy.name) &&
        Objects.equals(this.identificationNumber, guardianOrProxy.identificationNumber) &&
        Objects.equals(this.guardianshipScope, guardianOrProxy.guardianshipScope) &&
        Objects.equals(this.isGuardianshipInPersonalScope, guardianOrProxy.isGuardianshipInPersonalScope) &&
        Objects.equals(this.nameBirthDate, guardianOrProxy.nameBirthDate) &&
        Objects.equals(this.guardianInformation, guardianOrProxy.guardianInformation) &&
        Objects.equals(this.guardianServiceArea, guardianOrProxy.guardianServiceArea);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, identificationNumber, guardianshipScope, isGuardianshipInPersonalScope, nameBirthDate, guardianInformation, guardianServiceArea);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GuardianOrProxy {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    identificationNumber: ").append(toIndentedString(identificationNumber)).append("\n");
    sb.append("    guardianshipScope: ").append(toIndentedString(guardianshipScope)).append("\n");
    sb.append("    isGuardianshipInPersonalScope: ").append(toIndentedString(isGuardianshipInPersonalScope)).append("\n");
    sb.append("    nameBirthDate: ").append(toIndentedString(nameBirthDate)).append("\n");
    sb.append("    guardianInformation: ").append(toIndentedString(guardianInformation)).append("\n");
    sb.append("    guardianServiceArea: ").append(toIndentedString(guardianServiceArea)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("identificationNumber");
    openapiFields.add("guardianshipScope");
    openapiFields.add("isGuardianshipInPersonalScope");
    openapiFields.add("nameBirthDate");
    openapiFields.add("guardianInformation");
    openapiFields.add("guardianServiceArea");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GuardianOrProxy
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GuardianOrProxy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GuardianOrProxy is not found in the empty JSON string", GuardianOrProxy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GuardianOrProxy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GuardianOrProxy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        GuardianOrProxyName.validateJsonElement(jsonObj.get("name"));
      }
      if ((jsonObj.get("identificationNumber") != null && !jsonObj.get("identificationNumber").isJsonNull()) && !jsonObj.get("identificationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identificationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identificationNumber").toString()));
      }
      // validate the optional field `guardianshipScope`
      if (jsonObj.get("guardianshipScope") != null && !jsonObj.get("guardianshipScope").isJsonNull()) {
        GuardianshipScope.validateJsonElement(jsonObj.get("guardianshipScope"));
      }
      // validate the optional field `nameBirthDate`
      if (jsonObj.get("nameBirthDate") != null && !jsonObj.get("nameBirthDate").isJsonNull()) {
        GuardianOrProxyNameBirthDate.validateJsonElement(jsonObj.get("nameBirthDate"));
      }
      // validate the optional field `guardianInformation`
      if (jsonObj.get("guardianInformation") != null && !jsonObj.get("guardianInformation").isJsonNull()) {
        GuardianOrProxyGuardianInformation.validateJsonElement(jsonObj.get("guardianInformation"));
      }
      if (jsonObj.get("guardianServiceArea") != null && !jsonObj.get("guardianServiceArea").isJsonNull()) {
        JsonArray jsonArrayguardianServiceArea = jsonObj.getAsJsonArray("guardianServiceArea");
        if (jsonArrayguardianServiceArea != null) {
          // ensure the json data is an array
          if (!jsonObj.get("guardianServiceArea").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `guardianServiceArea` to be an array in the JSON string but got `%s`", jsonObj.get("guardianServiceArea").toString()));
          }

          // validate the optional field `guardianServiceArea` (array)
          for (int i = 0; i < jsonArrayguardianServiceArea.size(); i++) {
            GuardianServiceArea.validateJsonElement(jsonArrayguardianServiceArea.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GuardianOrProxy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GuardianOrProxy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GuardianOrProxy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GuardianOrProxy.class));

       return (TypeAdapter<T>) new TypeAdapter<GuardianOrProxy>() {
           @Override
           public void write(JsonWriter out, GuardianOrProxy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GuardianOrProxy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GuardianOrProxy given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GuardianOrProxy
  * @throws IOException if the JSON string is invalid with respect to GuardianOrProxy
  */
  public static GuardianOrProxy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GuardianOrProxy.class);
  }

 /**
  * Convert an instance of GuardianOrProxy to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

